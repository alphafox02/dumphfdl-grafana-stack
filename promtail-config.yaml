server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/promtail-positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: dumphfdl
    static_configs:
      - targets: [localhost]
        labels:
          job: dumphfdl
          __path__: /logs/hfdl_*.jsonl   # map your /tmp/hfdl.jsonl -> /logs/ in docker
    pipeline_stages:
      - json:
          expressions:
            app: hfdl.app.name
            ver: hfdl.app.ver
            station: hfdl.station
            tsecs: hfdl.t.sec
            tusec: hfdl.t.usec
            freq: hfdl.freq
            bit_rate: hfdl.bit_rate
            sig_db: hfdl.sig_level
            noise_db: hfdl.noise_level
            skew_hz: hfdl.freq_skew
            slot: hfdl.slot
            lpdu_type_id: hfdl.lpdu.type.id
            lpdu_type: hfdl.lpdu.type.name
            src_type: hfdl.lpdu.src.type
            src_id: hfdl.lpdu.src.id
            dst_type: hfdl.lpdu.dst.type
            dst_id: hfdl.lpdu.dst.id
            dst_name: hfdl.lpdu.dst.name
            icao: hfdl.lpdu.ac_info.icao
            hfnpdu_type_id: hfdl.lpdu.hfnpdu.type.id
            hfnpdu_type: hfdl.lpdu.hfnpdu.type.name
            flight_id: hfdl.lpdu.hfnpdu.flight_id
            pos_lat: hfdl.lpdu.hfnpdu.pos.lat
            pos_lon: hfdl.lpdu.hfnpdu.pos.lon
            acars_label: hfdl.lpdu.hfnpdu.acars.label
            acars_flight: hfdl.lpdu.hfnpdu.acars.flight
            acars_reg: hfdl.lpdu.hfnpdu.acars.reg
            acars_msg: hfdl.lpdu.hfnpdu.acars.msg_text
      - replace:
          source: dst_name
          expression: '[^A-Za-z0-9_.-]'
          replace: '_'
      - labels:
          station:
          freq:
          bit_rate:
          slot:
          lpdu_type:
          dst_type:
          dst_name:
          icao:
          flight_id:
          acars_label:
          acars_flight:
      - timestamp:
          source: tsecs
          format: Unix

  - job_name: dumpvdl2
    static_configs:
      - targets: [localhost]
        labels:
          job: dumpvdl2
          __path__: /logs/vdl2_*.jsonl   # map your dumpvdl2 JSONL file(s) here
    pipeline_stages:
      # Parse top-level vdl2 envelope (metadata + whatever libacars added)
      - json:
          expressions:
            app: vdl2.app.name
            ver: vdl2.app.ver
            station: vdl2.station
            tsecs: vdl2.t.sec
            tusec: vdl2.t.usec
            freq: vdl2.freq
            burst_len: vdl2.burst_len_octets
            hdr_bits_fixed: vdl2.hdr_bits_fixed
            fec_octets: vdl2.octets_corrected_by_fec
            idx: vdl2.idx
            sig_db: vdl2.sig_level
            noise_db: vdl2.noise_level
            skew_ppm: vdl2.freq_skew

            # AVL/C / ACARS (present only when decoded; null otherwise)
            # libacars commonly exposes these keys; adjust if your build differs.
            avlc_sap: vdl2.avlc.sap
            avlc_proto: vdl2.avlc.proto
            acars_label: vdl2.acars.label
            acars_block_id: vdl2.acars.block_id
            acars_mode: vdl2.acars.mode
            acars_reg: vdl2.acars.reg
            acars_flight: vdl2.acars.flight
            acars_txt: vdl2.acars.msg_text
      # Optional: normalize flight/reg for label use
      - replace:
          source: acars_flight
          expression: '[^A-Za-z0-9_.-]'
          replace: '_'
      - replace:
          source: acars_reg
          expression: '[^A-Za-z0-9_.-]'
          replace: '_'
      # Promote a few as labels (nulls are ignored)
      - labels:
          station:
          freq:
          avlc_proto:
          acars_label:
          acars_flight:
          acars_reg:
      # Use device seconds; (microseconds exist but Promtail canâ€™t combine sec+usec directly)
      - timestamp:
          source: tsecs
          format: Unix
